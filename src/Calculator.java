
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author rainier
 */
public class Calculator extends javax.swing.JFrame {
    private String mode = "light";
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        framePanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        projectLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        namesLabel = new javax.swing.JLabel();
        layerPane = new javax.swing.JLayeredPane();
        calculatorTabs = new javax.swing.JTabbedPane();
        inputPanel = new javax.swing.JPanel();
        sumLabel = new javax.swing.JLabel();
        sum = new javax.swing.JTextField();
        ArrayTextScrollPane = new javax.swing.JScrollPane();
        arrayText = new javax.swing.JTextArea();
        solveButton = new javax.swing.JButton();
        setLabel = new javax.swing.JLabel();
        answersLabel = new javax.swing.JLabel();
        displayAnswers1ScrollPane = new javax.swing.JScrollPane();
        displayAnswers1 = new javax.swing.JTextArea();
        uploadFilePanel = new javax.swing.JPanel();
        uploadFileButton = new javax.swing.JButton();
        fileNameLabel = new javax.swing.JLabel();
        answers1Label = new javax.swing.JLabel();
        displayAnswersScrollPane = new javax.swing.JScrollPane();
        displayAnswers = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Subset Sum Calculator");
        setBackground(new java.awt.Color(0, 95, 137));

        framePanel.setBackground(new java.awt.Color(0, 95, 137));

        titlePanel.setBackground(new java.awt.Color(0, 95, 137));

        projectLabel.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        projectLabel.setForeground(new java.awt.Color(230, 236, 235));
        projectLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        projectLabel.setText("CMSC 142 C-2L Project");

        ImageIcon myImage = new ImageIcon(getClass().getResource("/images/calculator.png"));
        Image img1 = myImage.getImage();
        Image img2 = img1.getScaledInstance(83, 83,Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        logoLabel.setIcon(i);
        logoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoLabelMouseClicked(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Anton", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(230, 236, 235));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Subset Sum Calculator");

        namesLabel.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        namesLabel.setForeground(new java.awt.Color(230, 236, 235));
        namesLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        namesLabel.setText("Samarista, Cho, Ponce de Leon");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(namesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(titleLabel)))
                .addGap(22, 22, 22))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(projectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namesLabel)
                .addGap(15, 15, 15))
        );

        calculatorTabs.setBackground(new java.awt.Color(160, 197, 207));

        inputPanel.setBackground(new java.awt.Color(160, 197, 207));

        sumLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        sumLabel.setForeground(new java.awt.Color(0, 95, 137));
        sumLabel.setText("ENTER SUM:");

        sum.setBackground(new java.awt.Color(230, 236, 245));

        arrayText.setBackground(new java.awt.Color(230, 236, 245));
        arrayText.setColumns(20);
        arrayText.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        arrayText.setRows(5);
        arrayText.setText("values must be comma-separated");
        arrayText.setToolTipText("");
        ArrayTextScrollPane.setViewportView(arrayText);

        solveButton.setBackground(new java.awt.Color(230, 236, 245));
        solveButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        solveButton.setForeground(new java.awt.Color(0, 95, 137));
        solveButton.setText("SOLVE");
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        setLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        setLabel.setForeground(new java.awt.Color(0, 95, 137));
        setLabel.setText("ENTER SET:");

        answersLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        answersLabel.setForeground(new java.awt.Color(0, 95, 137));
        answersLabel.setText("SUBSET SUMS:");

        displayAnswers1.setBackground(new java.awt.Color(230, 236, 245));
        displayAnswers1.setColumns(20);
        displayAnswers1.setRows(5);
        displayAnswers1.setEditable(false);
        displayAnswers1ScrollPane.setViewportView(displayAnswers1);

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayAnswers1ScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sumLabel)
                            .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(setLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(131, 211, Short.MAX_VALUE))
                            .addComponent(ArrayTextScrollPane)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                        .addComponent(answersLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(solveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ArrayTextScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(solveButton)
                    .addComponent(answersLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayAnswers1ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        calculatorTabs.addTab("Input Set", inputPanel);

        uploadFilePanel.setBackground(new java.awt.Color(160, 197, 207));

        uploadFileButton.setBackground(new java.awt.Color(230, 236, 245));
        uploadFileButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        uploadFileButton.setForeground(new java.awt.Color(0, 95, 137));
        uploadFileButton.setText("UPLOAD FILE...");
        uploadFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFileButtonActionPerformed(evt);
            }
        });

        fileNameLabel.setText("...");

        answers1Label.setBackground(new java.awt.Color(230, 236, 245));
        answers1Label.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        answers1Label.setForeground(new java.awt.Color(0, 95, 137));
        answers1Label.setText("SUBSET SUMS:");

        displayAnswers.setBackground(new java.awt.Color(230, 236, 245));
        displayAnswers.setColumns(20);
        displayAnswers.setRows(5);
        displayAnswers.setEditable(false);
        displayAnswersScrollPane.setViewportView(displayAnswers);

        javax.swing.GroupLayout uploadFilePanelLayout = new javax.swing.GroupLayout(uploadFilePanel);
        uploadFilePanel.setLayout(uploadFilePanelLayout);
        uploadFilePanelLayout.setHorizontalGroup(
            uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayAnswersScrollPane)
                    .addGroup(uploadFilePanelLayout.createSequentialGroup()
                        .addGroup(uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(uploadFilePanelLayout.createSequentialGroup()
                                .addComponent(uploadFileButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileNameLabel))
                            .addComponent(answers1Label))
                        .addGap(0, 284, Short.MAX_VALUE)))
                .addContainerGap())
        );
        uploadFilePanelLayout.setVerticalGroup(
            uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadFileButton)
                    .addComponent(fileNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answers1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayAnswersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        calculatorTabs.addTab("Load File", uploadFilePanel);

        layerPane.setLayer(calculatorTabs, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layerPaneLayout = new javax.swing.GroupLayout(layerPane);
        layerPane.setLayout(layerPaneLayout);
        layerPaneLayout.setHorizontalGroup(
            layerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calculatorTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layerPaneLayout.setVerticalGroup(
            layerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calculatorTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout framePanelLayout = new javax.swing.GroupLayout(framePanel);
        framePanel.setLayout(framePanelLayout);
        framePanelLayout.setHorizontalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(layerPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titlePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        framePanelLayout.setVerticalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layerPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(framePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(framePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed
        //Loads the input text and converts to int
        int k = Integer.parseInt(sum.getText());
        String temp = arrayText.getText();
        String[] temp2 = temp.split(",");
        int size = temp2.length;
        int[] set = new int[size];

        //needs idiotproofing
        for(int i = 0; i < size; i++){
            set[i] = Integer.parseInt(temp2[i]);
        }
        //gets combination and list of subset sums
        ArrayList<ArrayList<Integer>> combinationArray = Combination(size);
        ArrayList<int[]> answerArray = FindSubsetSum(combinationArray, k, set);
        //Converts list to a string that will be displayed in the text field
        String textToDisplay = "";
        for(int i = 0; i < answerArray.size() ; i++){
           for(int j=0; j< answerArray.get(i).length ; j++){
              if(answerArray.get(i)[j] == 0) continue;
              if(j != answerArray.get(i).length-1)textToDisplay += (Integer.toString(answerArray.get(i)[j])+ " ");
              else textToDisplay += Integer.toString(answerArray.get(i)[j]);
           }textToDisplay += "\n";
       }
        displayAnswers1.setText(textToDisplay);

    }//GEN-LAST:event_solveButtonActionPerformed

    private void uploadFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFileButtonActionPerformed
        //File reading tab that reads input file
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Only .txt files", "txt", "text");
        j.setFileFilter(filter);
        int r = j.showSaveDialog(null);
        // if the user selects a file 
        if (r == JFileChooser.APPROVE_OPTION){ 
            // set the label to the path of the selected file 
            fileNameLabel.setText(j.getSelectedFile().getAbsolutePath()); 
            String filename = j.getSelectedFile().getAbsolutePath();
            File f = new File(filename);
        try { 
            //read file
            FileReader fileReader = new FileReader(f);
            BufferedReader bReader = new BufferedReader(fileReader);
            String line = bReader.readLine();
            
            int numOfSets = Integer.parseInt(line);
            int arrayOfSums[] = new int[numOfSets];
            
            //read lines
            ArrayList<int []> arrayOfSets = new ArrayList<>(); 
            for(int i = 0; i < numOfSets; i++){
                line = bReader.readLine();
                if(line.equals("")) break;
                arrayOfSums[i] = Integer.parseInt(line);
                line = bReader.readLine();
                String lines[] = line.split(" ");
                int[] tempArray = new int[lines.length];
                int k = 0;
                for (String line1 : lines) {
                    tempArray[k] = Integer.parseInt(line1);
                    k++;
                }arrayOfSets.add(tempArray);
                
            }
            ArrayList<int[]> answerArray = null;
            String textToDisplay = "";
            //combination and find subset sums of each input and then manipulate string to be displayed in text field
            for(int i = 0; i < numOfSets; i++){
                answerArray = FindSubsetSum(Combination(arrayOfSets.get(i).length), arrayOfSums[i], arrayOfSets.get(i));
                textToDisplay = textToDisplay+ "Sums of "+ Integer.toString(arrayOfSums[i]) +":\n";
                for (int b = 0; b < answerArray.size(); b++) {
                    for (int x = 0; x < answerArray.get(b).length; x++) {
                        if(answerArray.get(b)[x] == 0) continue;
                        if (x != answerArray.get(b).length - 1) {
                            textToDisplay += (Integer.toString(answerArray.get(b)[x]) + " ");
                        } else {
                            textToDisplay += Integer.toString(answerArray.get(b)[x]);
                        }
                    }
                    textToDisplay += "\n";
                }textToDisplay += "\n";
            }
            displayAnswers.setText(textToDisplay);
            System.out.println(textToDisplay);
        } catch (FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException ex) {
            Logger.getLogger(Calculator.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else fileNameLabel.setText("No file chosen..."); 
        
    }//GEN-LAST:event_uploadFileButtonActionPerformed

    private void logoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoLabelMouseClicked
        //dark mode XD
        if(this.mode.equals("light")){
            framePanel.setBackground(new java.awt.Color(0,0,0));
            inputPanel.setBackground(new java.awt.Color(18,18,18));
            uploadFilePanel.setBackground(new java.awt.Color(18,18,18));
            titlePanel.setBackground(new java.awt.Color(0,0,0));
            sum.setBackground(new java.awt.Color(66,66,66));
            arrayText.setBackground(new java.awt.Color(66,66,66));
            displayAnswers1.setBackground(new java.awt.Color(66,66,66));
            displayAnswers.setBackground(new java.awt.Color(66,66,66));
            solveButton.setForeground(new java.awt.Color(66, 66, 66));
            uploadFileButton.setForeground(new java.awt.Color(66, 66, 66));
            sumLabel.setForeground(new java.awt.Color(230,236,235));
            setLabel.setForeground(new java.awt.Color(230,236,235));
            answersLabel.setForeground(new java.awt.Color(230,236,235));
            answers1Label.setForeground(new java.awt.Color(230,236,235));
            fileNameLabel.setForeground(new java.awt.Color(230,236,235));
            this.mode = "dark";
        }else{
            framePanel.setBackground(new java.awt.Color(0,95,137));
            inputPanel.setBackground(new java.awt.Color(160,197,207));
            uploadFilePanel.setBackground(new java.awt.Color(160,197,207));
            titlePanel.setBackground(new java.awt.Color(0,95,137));
            sum.setBackground(new java.awt.Color(230,236,245));
            arrayText.setBackground(new java.awt.Color(230,236,245));
            displayAnswers1.setBackground(new java.awt.Color(230,236,245));
            displayAnswers.setBackground(new java.awt.Color(230,236,245));
            solveButton.setForeground(new java.awt.Color(0,95,137));
            uploadFileButton.setForeground(new java.awt.Color(0,95,137));
            sumLabel.setForeground(new java.awt.Color(0,95,137));
            setLabel.setForeground(new java.awt.Color(0,95,137));
            answersLabel.setForeground(new java.awt.Color(0,95,137));
            answers1Label.setForeground(new java.awt.Color(0,95,137));
            fileNameLabel.setForeground(new java.awt.Color(0,0,0));
            this.mode = "light";
        }
    }//GEN-LAST:event_logoLabelMouseClicked
    
    private ArrayList<int[]> FindSubsetSum(ArrayList<ArrayList<Integer>> combination, int sum, int[] set){
       ArrayList<int[]> subsetSums= new ArrayList<>();
       
        for(int i = 0; i < combination.size() ; i++){
           int tempSum = 0;
           int[] tempArray = new int[combination.get(i).size()];
           for(int j=0; j < combination.get(i).size() ; j++){
               tempSum+= set[(combination.get(i).get(j)) - 1]; //summation of different combinations stored in tempsum
               tempArray[j] = set[(combination.get(i).get(j)) - 1]; //stores current value from the set
               if(tempSum > sum) break; //if tempsum is already greater than sum, it halts
           }    
           if(tempSum == sum){
               int foundFlag = 0; // Found flag for signaling program if the tempArray is already inside the subsetSums array
               for(int x = 0; x < subsetSums.size(); x++) {
                    if(Arrays.equals(subsetSums.get(x), tempArray)) foundFlag = 1;   // sets foundFlag to 1 if found
               }               
               if(foundFlag != 1) { // if tempArray is not already found in subsetSums, we add the tempArray to the subset Sums
                   subsetSums.add(tempArray);
               }          
           }    
       }
        return subsetSums;
    }
    
    private ArrayList<ArrayList<Integer>> Combination(int size){
        //backtracking combination that returns 2D arraylist
        ArrayList<ArrayList<Integer>> combinations = new ArrayList<>();
        int start, move, i, candidate;
        int nopts[] = new int[size+2];
        int option[][] = new int[size+2][size+2];
        
        start= move=0;
        nopts[start]=1;
        
        while(nopts[start]>0){
            if(nopts[move]>0){
                move++;
                nopts[move]=0;
                
                if(move != size+1){
                    for(candidate=size ; candidate>=1 ; candidate--){
                        for(i=move-1;i>=1;i--){
                            if(candidate >= option[i][nopts[i]]){break;}
                        }
                        if(!(i>=1)){
                            option[move][++nopts[move]]=candidate;
                        }
                    }
                }
            }else{
                ArrayList<Integer> tempArray= new ArrayList<>();
                for(i=1;i<move;i++){
                    tempArray.add(option[i][nopts[i]]);
                }
                if(!tempArray.isEmpty()){ //if empty, dont add to solutions
                    combinations.add(tempArray);
                }
                move--;
                nopts[move]--;
            }
        }
        return combinations;  
    }
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ArrayTextScrollPane;
    private javax.swing.JLabel answers1Label;
    private javax.swing.JLabel answersLabel;
    private javax.swing.JTextArea arrayText;
    private javax.swing.JTabbedPane calculatorTabs;
    private javax.swing.JTextArea displayAnswers;
    private javax.swing.JTextArea displayAnswers1;
    private javax.swing.JScrollPane displayAnswers1ScrollPane;
    private javax.swing.JScrollPane displayAnswersScrollPane;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JPanel framePanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLayeredPane layerPane;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel namesLabel;
    private javax.swing.JLabel projectLabel;
    private javax.swing.JLabel setLabel;
    private javax.swing.JButton solveButton;
    private javax.swing.JTextField sum;
    private javax.swing.JLabel sumLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JButton uploadFileButton;
    private javax.swing.JPanel uploadFilePanel;
    // End of variables declaration//GEN-END:variables
}
